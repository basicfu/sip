group 'com.basicfu.sip'
version "0.0.1-3-SNAPSHOT"
def artifactId = "sip-client"
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

def siteUrl = 'https://github.com/basicfu/sip'
def gitUrl = 'https://github.com/daliyan/sip.git'
//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: "basicfu",password: "W?#na9/v@dU8A83M")
            }
//            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
//                authentication(userName: "$System.env.NEXUS_USERNAME", password: "$System.env.NEXUS_PASSWORD")
//            }
            pom.version = "$project.version"
            pom.artifactId = "$artifactId"
            pom.groupId = "$project.group"
            pom.project {
                name project.name
                packaging 'jar'
                description 'sip client description'
                url siteUrl
                scm {
                    url siteUrl
                    connection gitUrl
                    developerConnection gitUrl
                }
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'basicfu'
                        name 'basicfu'
                        email 'basicfu@gmail.com'
                        url 'https://basicfu.com'
                    }
                }
            }
        }
    }
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}
signing {
    useGpgCmd()
    sign configurations.archives
}
